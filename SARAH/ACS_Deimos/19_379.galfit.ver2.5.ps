%!PS-Adobe-2.0
%%Title: 19_379.galfit.ver2.5.ps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Sun Feb 21 16:38:57 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (19_379.galfit.ver2.5.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (IR)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Feb 21 16:38:57 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
720 4848 M
31 0 V
6177 0 R
-31 0 V
720 4640 M
63 0 V
6145 0 R
-63 0 V
stroke
624 4640 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 14)]
] -53.3 MRshow
1.000 UL
LTb
720 4432 M
31 0 V
6177 0 R
-31 0 V
720 4224 M
63 0 V
6145 0 R
-63 0 V
stroke
624 4224 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 15)]
] -53.3 MRshow
1.000 UL
LTb
720 4016 M
31 0 V
6177 0 R
-31 0 V
720 3808 M
63 0 V
6145 0 R
-63 0 V
stroke
624 3808 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 16)]
] -53.3 MRshow
1.000 UL
LTb
720 3600 M
31 0 V
6177 0 R
-31 0 V
720 3392 M
63 0 V
6145 0 R
-63 0 V
stroke
624 3392 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 17)]
] -53.3 MRshow
1.000 UL
LTb
720 3184 M
31 0 V
6177 0 R
-31 0 V
720 2976 M
63 0 V
6145 0 R
-63 0 V
stroke
624 2976 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 18)]
] -53.3 MRshow
1.000 UL
LTb
720 2768 M
31 0 V
6177 0 R
-31 0 V
720 2560 M
63 0 V
6145 0 R
-63 0 V
stroke
624 2560 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 19)]
] -53.3 MRshow
1.000 UL
LTb
720 2352 M
31 0 V
6177 0 R
-31 0 V
720 2144 M
63 0 V
6145 0 R
-63 0 V
stroke
624 2144 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 20)]
] -53.3 MRshow
1.000 UL
LTb
720 1936 M
31 0 V
6177 0 R
-31 0 V
720 1728 M
63 0 V
6145 0 R
-63 0 V
stroke
624 1728 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 21)]
] -53.3 MRshow
1.000 UL
LTb
720 1520 M
31 0 V
6177 0 R
-31 0 V
720 1312 M
63 0 V
6145 0 R
-63 0 V
stroke
624 1312 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 22)]
] -53.3 MRshow
1.000 UL
LTb
720 1104 M
31 0 V
6177 0 R
-31 0 V
720 896 M
63 0 V
6145 0 R
-63 0 V
stroke
624 896 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 23)]
] -53.3 MRshow
1.000 UL
LTb
720 688 M
31 0 V
6177 0 R
-31 0 V
720 480 M
63 0 V
6145 0 R
-63 0 V
stroke
624 480 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 24)]
] -53.3 MRshow
1.000 UL
LTb
720 480 M
0 31 V
0 4337 R
0 -31 V
1084 480 M
0 31 V
0 4337 R
0 -31 V
1343 480 M
0 31 V
0 4337 R
0 -31 V
1543 480 M
0 31 V
0 4337 R
0 -31 V
1707 480 M
0 31 V
0 4337 R
0 -31 V
1846 480 M
0 31 V
0 4337 R
0 -31 V
1966 480 M
0 31 V
0 4337 R
0 -31 V
2072 480 M
0 31 V
0 4337 R
0 -31 V
2166 480 M
0 63 V
0 4305 R
0 -63 V
stroke
2166 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.1)]
] -53.3 MCshow
1.000 UL
LTb
2166 480 M
0 31 V
0 4337 R
0 -31 V
2789 480 M
0 31 V
0 4337 R
0 -31 V
3154 480 M
0 31 V
0 4337 R
0 -31 V
3412 480 M
0 31 V
0 4337 R
0 -31 V
3613 480 M
0 31 V
0 4337 R
0 -31 V
3777 480 M
0 31 V
0 4337 R
0 -31 V
3915 480 M
0 31 V
0 4337 R
0 -31 V
4035 480 M
0 31 V
0 4337 R
0 -31 V
4141 480 M
0 31 V
0 4337 R
0 -31 V
4236 480 M
0 63 V
0 4305 R
0 -63 V
stroke
4236 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1)]
] -53.3 MCshow
1.000 UL
LTb
4236 480 M
0 31 V
0 4337 R
0 -31 V
4859 480 M
0 31 V
0 4337 R
0 -31 V
5223 480 M
0 31 V
0 4337 R
0 -31 V
5482 480 M
0 31 V
0 4337 R
0 -31 V
5682 480 M
0 31 V
0 4337 R
0 -31 V
5846 480 M
0 31 V
0 4337 R
0 -31 V
5985 480 M
0 31 V
0 4337 R
0 -31 V
6105 480 M
0 31 V
0 4337 R
0 -31 V
6210 480 M
0 31 V
0 4337 R
0 -31 V
6305 480 M
0 63 V
0 4305 R
0 -63 V
stroke
6305 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 10)]
] -53.3 MCshow
1.000 UL
LTb
6305 480 M
0 31 V
0 4337 R
0 -31 V
6928 480 M
0 31 V
0 4337 R
0 -31 V
stroke
720 4848 N
720 480 L
6208 0 V
0 4368 V
-6208 0 V
Z stroke
LCb setrgbcolor
160 2664 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 160.0 0.0 true true 0 (m)]
[(Helvetica) 160.0 0.0 true true 0 ( [F814W mag )]
[(Helvetica) 160.0 0.0 true true 0 (arcsec)]
[(Helvetica) 128.0 80.0 true true 0 (-2)]
[(Helvetica) 160.0 0.0 true true 0 (])]
] -69.3 MCshow
grestore
LTb
LCb setrgbcolor
3824 80 M
[ [(Helvetica) 160.0 0.0 true true 0 (r [arcsec])]
] -53.3 MCshow
LTb
1.500 UP
2166 1478 M
[ [(Helvetica) 160.0 0.0 true true 0 (mag= 15.3)]
] -53.3 MLshow
2166 1187 M
[ [(Helvetica) 160.0 0.0 true true 0 (Re= 3.25 [arcsec])]
] -53.3 MLshow
2166 896 M
[ [(Helvetica) 160.0 0.0 true true 0 (n= 1.7)]
] -53.3 MLshow
3.000 UL
LT6
5294 4848 M
0 -4368 V
stroke
1.000 UL
LTb
1.500 UP
2.000 UL
LT7
LTb
2352 4705 M
[ [(Helvetica) 160.0 0.0 true true 0 (Galaxy profile)]
] -53.3 MRshow
LT7
870 4068 TriU
955 4063 TriU
1037 4058 TriU
1118 4052 TriU
1204 4046 TriU
1289 4039 TriU
1383 4029 TriU
1470 4017 TriU
1554 4004 TriU
1637 3989 TriU
1718 3973 TriU
1799 3955 TriU
1881 3934 TriU
1964 3910 TriU
2047 3885 TriU
2128 3860 TriU
2205 3835 TriU
2292 3803 TriU
2374 3771 TriU
2455 3737 TriU
2540 3699 TriU
2628 3660 TriU
2713 3620 TriU
2793 3581 TriU
2879 3541 TriU
2963 3501 TriU
3047 3460 TriU
3133 3419 TriU
3217 3376 TriU
3305 3332 TriU
3391 3288 TriU
3474 3244 TriU
3556 3198 TriU
3637 3151 TriU
3719 3102 TriU
3799 3052 TriU
3880 2999 TriU
3959 2945 TriU
4037 2888 TriU
4113 2829 TriU
4187 2770 TriU
4258 2712 TriU
4326 2657 TriU
4395 2600 TriU
4458 2550 TriU
4525 2497 TriU
4591 2442 TriU
4656 2391 TriU
4721 2337 TriU
4789 2283 TriU
4857 2226 TriU
4928 2170 TriU
5001 2106 TriU
5069 2050 TriU
5145 1986 TriU
5222 1917 TriU
5308 1841 TriU
2687 4705 TriU
2.000 UL
LTb
2352 4545 M
[ [(Helvetica) 160.0 0.0 true true 0 (Sersic+Gauss fit)]
] -53.3 MRshow
2448 4545 M
478 0 V
720 3712 M
221 0 V
193 -1 V
63 -1 V
79 0 V
72 -1 V
71 -2 V
70 -1 V
71 -1 V
77 -2 V
90 -3 V
91 -2 V
94 -4 V
96 -4 V
88 -5 V
88 -6 V
77 -7 V
89 -8 V
93 -10 V
86 -12 V
91 -14 V
85 -17 V
89 -19 V
91 -23 V
86 -27 V
90 -32 V
86 -36 V
87 -42 V
84 -48 V
84 -53 V
82 -59 V
80 -63 V
78 -65 V
76 -65 V
71 -61 V
69 -56 V
65 -50 V
65 -48 V
60 -40 V
62 -40 V
62 -40 V
65 -41 V
67 -43 V
68 -44 V
72 -48 V
75 -52 V
78 -55 V
81 -60 V
83 -65 V
83 -68 V
84 -73 V
85 -77 V
85 -82 V
85 -85 V
85 -89 V
84 -93 V
85 -96 V
85 -100 V
84 -101 V
83 -100 V
81 -98 V
81 -96 V
82 -92 V
83 -85 V
84 -75 V
84 -63 V
85 -51 V
85 -39 V
84 -28 V
85 -20 V
86 -13 V
85 -8 V
85 -5 V
85 -2 V
64 -2 V
stroke
5.000 UL
LT2
LTb
2352 4385 M
[ [(Helvetica) 160.0 0.0 true true 0 (Sersic fit)]
] -53.3 MRshow
LT2
2448 4385 M
478 0 V
786 3850 M
73 0 V
104 -1 V
155 -3 V
59 -1 V
84 -3 V
69 -4 V
71 -3 V
71 -4 V
68 -5 V
69 -5 V
77 -6 V
86 -9 V
87 -11 V
87 -12 V
89 -14 V
86 -16 V
77 -15 V
77 -18 V
75 -19 V
81 -22 V
71 -21 V
72 -22 V
75 -23 V
78 -26 V
80 -27 V
81 -31 V
85 -32 V
92 -38 V
91 -40 V
87 -41 V
82 -42 V
78 -43 V
76 -43 V
76 -44 V
75 -46 V
77 -47 V
79 -50 V
80 -53 V
83 -55 V
83 -57 V
85 -60 V
84 -62 V
83 -63 V
83 -65 V
82 -66 V
83 -69 V
85 -72 V
86 -75 V
85 -76 V
85 -79 V
86 -82 V
86 -84 V
85 -87 V
86 -88 V
85 -90 V
85 -90 V
84 -91 V
85 -92 V
82 -90 V
80 -87 V
81 -86 V
82 -83 V
82 -80 V
84 -76 V
84 -69 V
85 -62 V
84 -54 V
85 -46 V
85 -38 V
86 -30 V
85 -24 V
85 -18 V
86 -14 V
85 -10 V
32 -2 V
stroke
1.000 UL
LTb
720 4848 N
720 480 L
6208 0 V
0 4368 V
-6208 0 V
Z stroke
1.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
