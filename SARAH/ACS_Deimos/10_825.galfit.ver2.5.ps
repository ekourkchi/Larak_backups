%!PS-Adobe-2.0
%%Title: 10_825.galfit.ver2.5.ps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Sun Feb 21 16:49:06 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (10_825.galfit.ver2.5.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (IR)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Feb 21 16:49:06 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
720 4848 M
63 0 V
6145 0 R
-63 0 V
stroke
624 4848 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 12)]
] -53.3 MRshow
1.000 UL
LTb
720 4702 M
31 0 V
6177 0 R
-31 0 V
720 4557 M
63 0 V
6145 0 R
-63 0 V
stroke
624 4557 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 13)]
] -53.3 MRshow
1.000 UL
LTb
720 4411 M
31 0 V
6177 0 R
-31 0 V
720 4266 M
63 0 V
6145 0 R
-63 0 V
stroke
624 4266 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 14)]
] -53.3 MRshow
1.000 UL
LTb
720 4120 M
31 0 V
6177 0 R
-31 0 V
720 3974 M
63 0 V
6145 0 R
-63 0 V
stroke
624 3974 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 15)]
] -53.3 MRshow
1.000 UL
LTb
720 3829 M
31 0 V
6177 0 R
-31 0 V
720 3683 M
63 0 V
6145 0 R
-63 0 V
stroke
624 3683 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 16)]
] -53.3 MRshow
1.000 UL
LTb
720 3538 M
31 0 V
6177 0 R
-31 0 V
720 3392 M
63 0 V
6145 0 R
-63 0 V
stroke
624 3392 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 17)]
] -53.3 MRshow
1.000 UL
LTb
720 3246 M
31 0 V
6177 0 R
-31 0 V
720 3101 M
63 0 V
6145 0 R
-63 0 V
stroke
624 3101 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 18)]
] -53.3 MRshow
1.000 UL
LTb
720 2955 M
31 0 V
6177 0 R
-31 0 V
720 2810 M
63 0 V
6145 0 R
-63 0 V
stroke
624 2810 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 19)]
] -53.3 MRshow
1.000 UL
LTb
720 2664 M
31 0 V
6177 0 R
-31 0 V
720 2518 M
63 0 V
6145 0 R
-63 0 V
stroke
624 2518 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 20)]
] -53.3 MRshow
1.000 UL
LTb
720 2373 M
31 0 V
6177 0 R
-31 0 V
720 2227 M
63 0 V
6145 0 R
-63 0 V
stroke
624 2227 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 21)]
] -53.3 MRshow
1.000 UL
LTb
720 2082 M
31 0 V
6177 0 R
-31 0 V
720 1936 M
63 0 V
6145 0 R
-63 0 V
stroke
624 1936 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 22)]
] -53.3 MRshow
1.000 UL
LTb
720 1790 M
31 0 V
6177 0 R
-31 0 V
720 1645 M
63 0 V
6145 0 R
-63 0 V
stroke
624 1645 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 23)]
] -53.3 MRshow
1.000 UL
LTb
720 1499 M
31 0 V
6177 0 R
-31 0 V
720 1354 M
63 0 V
6145 0 R
-63 0 V
stroke
624 1354 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 24)]
] -53.3 MRshow
1.000 UL
LTb
720 1208 M
31 0 V
6177 0 R
-31 0 V
720 1062 M
63 0 V
6145 0 R
-63 0 V
stroke
624 1062 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 25)]
] -53.3 MRshow
1.000 UL
LTb
720 917 M
31 0 V
6177 0 R
-31 0 V
720 771 M
63 0 V
6145 0 R
-63 0 V
stroke
624 771 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 26)]
] -53.3 MRshow
1.000 UL
LTb
720 626 M
31 0 V
6177 0 R
-31 0 V
720 480 M
63 0 V
6145 0 R
-63 0 V
stroke
624 480 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 27)]
] -53.3 MRshow
1.000 UL
LTb
720 480 M
0 31 V
0 4337 R
0 -31 V
1064 480 M
0 31 V
0 4337 R
0 -31 V
1308 480 M
0 31 V
0 4337 R
0 -31 V
1498 480 M
0 31 V
0 4337 R
0 -31 V
1653 480 M
0 31 V
0 4337 R
0 -31 V
1783 480 M
0 31 V
0 4337 R
0 -31 V
1897 480 M
0 31 V
0 4337 R
0 -31 V
1997 480 M
0 31 V
0 4337 R
0 -31 V
2086 480 M
0 63 V
0 4305 R
0 -63 V
stroke
2086 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.1)]
] -53.3 MCshow
1.000 UL
LTb
2086 480 M
0 31 V
0 4337 R
0 -31 V
2675 480 M
0 31 V
0 4337 R
0 -31 V
3019 480 M
0 31 V
0 4337 R
0 -31 V
3263 480 M
0 31 V
0 4337 R
0 -31 V
3452 480 M
0 31 V
0 4337 R
0 -31 V
3607 480 M
0 31 V
0 4337 R
0 -31 V
3738 480 M
0 31 V
0 4337 R
0 -31 V
3851 480 M
0 31 V
0 4337 R
0 -31 V
3951 480 M
0 31 V
0 4337 R
0 -31 V
4041 480 M
0 63 V
0 4305 R
0 -63 V
stroke
4041 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1)]
] -53.3 MCshow
1.000 UL
LTb
4041 480 M
0 31 V
0 4337 R
0 -31 V
4629 480 M
0 31 V
0 4337 R
0 -31 V
4973 480 M
0 31 V
0 4337 R
0 -31 V
5218 480 M
0 31 V
0 4337 R
0 -31 V
5407 480 M
0 31 V
0 4337 R
0 -31 V
5562 480 M
0 31 V
0 4337 R
0 -31 V
5693 480 M
0 31 V
0 4337 R
0 -31 V
5806 480 M
0 31 V
0 4337 R
0 -31 V
5906 480 M
0 31 V
0 4337 R
0 -31 V
5995 480 M
0 63 V
0 4305 R
0 -63 V
stroke
5995 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 10)]
] -53.3 MCshow
1.000 UL
LTb
5995 480 M
0 31 V
0 4337 R
0 -31 V
6584 480 M
0 31 V
0 4337 R
0 -31 V
6928 480 M
0 31 V
0 4337 R
0 -31 V
stroke
720 4848 N
720 480 L
6208 0 V
0 4368 V
-6208 0 V
Z stroke
LCb setrgbcolor
160 2664 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 160.0 0.0 true true 0 (m)]
[(Helvetica) 160.0 0.0 true true 0 ( [F814W mag )]
[(Helvetica) 160.0 0.0 true true 0 (arcsec)]
[(Helvetica) 128.0 80.0 true true 0 (-2)]
[(Helvetica) 160.0 0.0 true true 0 (])]
] -69.3 MCshow
grestore
LTb
LCb setrgbcolor
3824 80 M
[ [(Helvetica) 160.0 0.0 true true 0 (r [arcsec])]
] -53.3 MCshow
LTb
1.500 UP
2086 1179 M
[ [(Helvetica) 160.0 0.0 true true 0 (mag= 14.3)]
] -53.3 MLshow
2086 975 M
[ [(Helvetica) 160.0 0.0 true true 0 (Re= 2.75 [arcsec])]
] -53.3 MLshow
2086 771 M
[ [(Helvetica) 160.0 0.0 true true 0 (n= 2.7)]
] -53.3 MLshow
3.000 UL
LT6
4900 4848 M
0 -4368 V
stroke
1.000 UL
LTb
1.500 UP
2.000 UL
LT7
LTb
2352 4705 M
[ [(Helvetica) 160.0 0.0 true true 0 (Galaxy profile)]
] -53.3 MRshow
LT7
912 4129 TriU
991 4126 TriU
1070 4123 TriU
1149 4120 TriU
1242 4115 TriU
1332 4108 TriU
1404 4102 TriU
1485 4093 TriU
1566 4083 TriU
1647 4072 TriU
1724 4060 TriU
1802 4046 TriU
1881 4031 TriU
1961 4013 TriU
2039 3994 TriU
2115 3973 TriU
2198 3949 TriU
2285 3921 TriU
2362 3892 TriU
2440 3862 TriU
2521 3828 TriU
2603 3792 TriU
2681 3757 TriU
2761 3720 TriU
2841 3683 TriU
2919 3648 TriU
2997 3614 TriU
3077 3579 TriU
3157 3546 TriU
3234 3516 TriU
3309 3489 TriU
3390 3462 TriU
3475 3430 TriU
3552 3397 TriU
3627 3361 TriU
3701 3324 TriU
3774 3286 TriU
3847 3248 TriU
3926 3204 TriU
4008 3156 TriU
4104 3095 TriU
4192 3038 TriU
4275 2985 TriU
4355 2933 TriU
4434 2881 TriU
4513 2833 TriU
4595 2783 TriU
4677 2734 TriU
4766 2675 TriU
4851 2619 TriU
4937 2575 TriU
5026 2525 TriU
5107 2475 TriU
5187 2424 TriU
5267 2364 TriU
5344 2303 TriU
5419 2247 TriU
5492 2185 TriU
5569 2110 TriU
5656 2026 TriU
5742 1940 TriU
5818 1853 TriU
5891 1757 TriU
5962 1648 TriU
6051 1504 TriU
6132 1348 TriU
6220 1188 TriU
6301 981 TriU
6364 804 TriU
2687 4705 TriU
2.000 UL
LTb
2352 4545 M
[ [(Helvetica) 160.0 0.0 true true 0 (Sersic+Gauss fit)]
] -53.3 MRshow
2448 4545 M
478 0 V
720 4095 M
123 -1 V
219 -5 V
207 -7 V
98 -4 V
68 -3 V
79 -5 V
84 -7 V
84 -8 V
80 -9 V
78 -10 V
82 -13 V
84 -16 V
82 -18 V
80 -21 V
80 -24 V
82 -28 V
80 -30 V
80 -35 V
85 -39 V
81 -38 V
83 -40 V
84 -40 V
83 -38 V
84 -40 V
81 -39 V
79 -40 V
79 -42 V
78 -41 V
78 -38 V
78 -35 V
77 -32 V
77 -31 V
80 -31 V
82 -34 V
81 -37 V
80 -37 V
77 -38 V
80 -38 V
81 -40 V
81 -43 V
80 -43 V
80 -46 V
82 -47 V
81 -49 V
80 -51 V
81 -54 V
81 -55 V
80 -57 V
81 -59 V
81 -63 V
81 -66 V
81 -67 V
80 -70 V
80 -72 V
80 -75 V
81 -78 V
80 -81 V
81 -84 V
80 -88 V
81 -93 V
81 -97 V
81 -103 V
81 -110 V
80 -120 V
81 -134 V
81 -155 V
81 -196 V
81 -307 V
stroke
5.000 UL
LT2
LTb
2352 4385 M
[ [(Helvetica) 160.0 0.0 true true 0 (Sersic fit)]
] -53.3 MRshow
LT2
2448 4385 M
478 0 V
720 3965 M
57 -1 V
134 -2 V
197 -4 V
158 -5 V
131 -5 V
79 -4 V
76 -5 V
78 -5 V
80 -7 V
74 -8 V
83 -9 V
78 -11 V
78 -12 V
77 -14 V
82 -15 V
84 -18 V
76 -18 V
73 -18 V
82 -21 V
80 -21 V
78 -19 V
80 -22 V
82 -22 V
84 -26 V
81 -28 V
81 -31 V
79 -32 V
78 -34 V
79 -34 V
79 -36 V
79 -36 V
79 -37 V
79 -38 V
80 -38 V
81 -40 V
81 -41 V
80 -43 V
79 -43 V
80 -44 V
81 -46 V
80 -46 V
81 -49 V
80 -49 V
82 -51 V
81 -53 V
80 -54 V
81 -56 V
81 -58 V
80 -58 V
81 -61 V
81 -63 V
81 -66 V
81 -67 V
80 -69 V
80 -70 V
80 -72 V
80 -74 V
81 -77 V
80 -79 V
81 -83 V
81 -86 V
81 -91 V
80 -97 V
81 -104 V
81 -114 V
81 -131 V
81 -158 V
81 -217 V
62 -339 V
stroke
1.000 UL
LTb
720 4848 N
720 480 L
6208 0 V
0 4368 V
-6208 0 V
Z stroke
1.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
