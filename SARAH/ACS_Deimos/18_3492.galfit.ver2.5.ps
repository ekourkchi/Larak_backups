%!PS-Adobe-2.0
%%Title: 18_3492.galfit.ver2.5.ps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Sun Feb 21 15:49:43 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (18_3492.galfit.ver2.5.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (IR)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Feb 21 15:49:43 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
720 4848 M
63 0 V
6145 0 R
-63 0 V
stroke
624 4848 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 14)]
] -53.3 MRshow
1.000 UL
LTb
720 4680 M
31 0 V
6177 0 R
-31 0 V
720 4512 M
63 0 V
6145 0 R
-63 0 V
stroke
624 4512 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 15)]
] -53.3 MRshow
1.000 UL
LTb
720 4344 M
31 0 V
6177 0 R
-31 0 V
720 4176 M
63 0 V
6145 0 R
-63 0 V
stroke
624 4176 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 16)]
] -53.3 MRshow
1.000 UL
LTb
720 4008 M
31 0 V
6177 0 R
-31 0 V
720 3840 M
63 0 V
6145 0 R
-63 0 V
stroke
624 3840 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 17)]
] -53.3 MRshow
1.000 UL
LTb
720 3672 M
31 0 V
6177 0 R
-31 0 V
720 3504 M
63 0 V
6145 0 R
-63 0 V
stroke
624 3504 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 18)]
] -53.3 MRshow
1.000 UL
LTb
720 3336 M
31 0 V
6177 0 R
-31 0 V
720 3168 M
63 0 V
6145 0 R
-63 0 V
stroke
624 3168 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 19)]
] -53.3 MRshow
1.000 UL
LTb
720 3000 M
31 0 V
6177 0 R
-31 0 V
720 2832 M
63 0 V
6145 0 R
-63 0 V
stroke
624 2832 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 20)]
] -53.3 MRshow
1.000 UL
LTb
720 2664 M
31 0 V
6177 0 R
-31 0 V
720 2496 M
63 0 V
6145 0 R
-63 0 V
stroke
624 2496 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 21)]
] -53.3 MRshow
1.000 UL
LTb
720 2328 M
31 0 V
6177 0 R
-31 0 V
720 2160 M
63 0 V
6145 0 R
-63 0 V
stroke
624 2160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 22)]
] -53.3 MRshow
1.000 UL
LTb
720 1992 M
31 0 V
6177 0 R
-31 0 V
720 1824 M
63 0 V
6145 0 R
-63 0 V
stroke
624 1824 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 23)]
] -53.3 MRshow
1.000 UL
LTb
720 1656 M
31 0 V
6177 0 R
-31 0 V
720 1488 M
63 0 V
6145 0 R
-63 0 V
stroke
624 1488 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 24)]
] -53.3 MRshow
1.000 UL
LTb
720 1320 M
31 0 V
6177 0 R
-31 0 V
720 1152 M
63 0 V
6145 0 R
-63 0 V
stroke
624 1152 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 25)]
] -53.3 MRshow
1.000 UL
LTb
720 984 M
31 0 V
6177 0 R
-31 0 V
720 816 M
63 0 V
6145 0 R
-63 0 V
stroke
624 816 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 26)]
] -53.3 MRshow
1.000 UL
LTb
720 648 M
31 0 V
6177 0 R
-31 0 V
720 480 M
63 0 V
6145 0 R
-63 0 V
stroke
624 480 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 27)]
] -53.3 MRshow
1.000 UL
LTb
720 480 M
0 31 V
0 4337 R
0 -31 V
1064 480 M
0 31 V
0 4337 R
0 -31 V
1308 480 M
0 31 V
0 4337 R
0 -31 V
1498 480 M
0 31 V
0 4337 R
0 -31 V
1653 480 M
0 31 V
0 4337 R
0 -31 V
1783 480 M
0 31 V
0 4337 R
0 -31 V
1897 480 M
0 31 V
0 4337 R
0 -31 V
1997 480 M
0 31 V
0 4337 R
0 -31 V
2086 480 M
0 63 V
0 4305 R
0 -63 V
stroke
2086 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.1)]
] -53.3 MCshow
1.000 UL
LTb
2086 480 M
0 31 V
0 4337 R
0 -31 V
2675 480 M
0 31 V
0 4337 R
0 -31 V
3019 480 M
0 31 V
0 4337 R
0 -31 V
3263 480 M
0 31 V
0 4337 R
0 -31 V
3452 480 M
0 31 V
0 4337 R
0 -31 V
3607 480 M
0 31 V
0 4337 R
0 -31 V
3738 480 M
0 31 V
0 4337 R
0 -31 V
3851 480 M
0 31 V
0 4337 R
0 -31 V
3951 480 M
0 31 V
0 4337 R
0 -31 V
4041 480 M
0 63 V
0 4305 R
0 -63 V
stroke
4041 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1)]
] -53.3 MCshow
1.000 UL
LTb
4041 480 M
0 31 V
0 4337 R
0 -31 V
4629 480 M
0 31 V
0 4337 R
0 -31 V
4973 480 M
0 31 V
0 4337 R
0 -31 V
5218 480 M
0 31 V
0 4337 R
0 -31 V
5407 480 M
0 31 V
0 4337 R
0 -31 V
5562 480 M
0 31 V
0 4337 R
0 -31 V
5693 480 M
0 31 V
0 4337 R
0 -31 V
5806 480 M
0 31 V
0 4337 R
0 -31 V
5906 480 M
0 31 V
0 4337 R
0 -31 V
5995 480 M
0 63 V
0 4305 R
0 -63 V
stroke
5995 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 10)]
] -53.3 MCshow
1.000 UL
LTb
5995 480 M
0 31 V
0 4337 R
0 -31 V
6584 480 M
0 31 V
0 4337 R
0 -31 V
6928 480 M
0 31 V
0 4337 R
0 -31 V
stroke
720 4848 N
720 480 L
6208 0 V
0 4368 V
-6208 0 V
Z stroke
LCb setrgbcolor
160 2664 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 160.0 0.0 true true 0 (m)]
[(Helvetica) 160.0 0.0 true true 0 ( [F814W mag )]
[(Helvetica) 160.0 0.0 true true 0 (arcsec)]
[(Helvetica) 128.0 80.0 true true 0 (-2)]
[(Helvetica) 160.0 0.0 true true 0 (])]
] -69.3 MCshow
grestore
LTb
LCb setrgbcolor
3824 80 M
[ [(Helvetica) 160.0 0.0 true true 0 (r [arcsec])]
] -53.3 MCshow
LTb
1.500 UP
2086 1286 M
[ [(Helvetica) 160.0 0.0 true true 0 (mag= 14.4)]
] -53.3 MLshow
2086 1051 M
[ [(Helvetica) 160.0 0.0 true true 0 (Re= 6.16 [arcsec])]
] -53.3 MLshow
2086 816 M
[ [(Helvetica) 160.0 0.0 true true 0 (n= 0.9)]
] -53.3 MLshow
3.000 UL
LT6
5584 4848 M
0 -4368 V
stroke
1.000 UL
LTb
1.500 UP
2.000 UL
LT7
LTb
2352 4705 M
[ [(Helvetica) 160.0 0.0 true true 0 (Galaxy profile)]
] -53.3 MRshow
LT7
767 4326 TriU
893 4323 TriU
1070 4317 TriU
1215 4310 TriU
1345 4303 TriU
1468 4296 TriU
1549 4289 TriU
1633 4281 TriU
1718 4271 TriU
1798 4261 TriU
1876 4251 TriU
1952 4239 TriU
2026 4227 TriU
2097 4215 TriU
2178 4200 TriU
2253 4185 TriU
2335 4167 TriU
2415 4148 TriU
2491 4129 TriU
2568 4107 TriU
2647 4084 TriU
2727 4057 TriU
2808 4029 TriU
2891 3997 TriU
2967 3968 TriU
3049 3936 TriU
3126 3903 TriU
3203 3870 TriU
3280 3834 TriU
3362 3793 TriU
3445 3750 TriU
3527 3707 TriU
3606 3665 TriU
3686 3623 TriU
3764 3583 TriU
3842 3542 TriU
3920 3502 TriU
3997 3461 TriU
4073 3421 TriU
4151 3375 TriU
4229 3329 TriU
4309 3280 TriU
4385 3231 TriU
4459 3186 TriU
4528 3144 TriU
4596 3101 TriU
4664 3062 TriU
4732 3024 TriU
4799 2987 TriU
4862 2955 TriU
4936 2912 TriU
5032 2847 TriU
5150 2766 TriU
5270 2699 TriU
5370 2644 TriU
5450 2601 TriU
5517 2558 TriU
5580 2514 TriU
5645 2469 TriU
5706 2418 TriU
5769 2370 TriU
5843 2292 TriU
5926 2194 TriU
6030 2054 TriU
6145 1890 TriU
6226 1779 TriU
6327 1616 TriU
6447 1539 TriU
6567 1382 TriU
6608 1399 TriU
6650 1540 TriU
6701 1479 TriU
6741 1329 TriU
6739 1503 TriU
6804 1234 TriU
2687 4705 TriU
2.000 UL
LTb
2352 4545 M
[ [(Helvetica) 160.0 0.0 true true 0 (Sersic+Gauss fit)]
] -53.3 MRshow
2448 4545 M
478 0 V
720 3878 M
29 0 V
80 0 V
82 0 V
138 0 V
129 0 V
105 0 V
113 -1 V
81 0 V
79 0 V
81 0 V
74 -1 V
86 0 V
76 0 V
81 -1 V
78 -1 V
80 0 V
83 -2 V
78 -1 V
83 -1 V
82 -2 V
75 -2 V
83 -3 V
81 -3 V
80 -3 V
82 -5 V
80 -6 V
81 -6 V
81 -8 V
81 -10 V
81 -11 V
81 -14 V
80 -17 V
81 -20 V
81 -24 V
81 -29 V
81 -34 V
81 -41 V
81 -47 V
82 -55 V
81 -64 V
82 -71 V
82 -77 V
82 -81 V
83 -77 V
84 -70 V
84 -55 V
79 -40 V
75 -31 V
72 -26 V
74 -26 V
76 -28 V
77 -30 V
78 -33 V
79 -36 V
78 -40 V
78 -44 V
80 -49 V
80 -55 V
80 -61 V
81 -68 V
81 -75 V
81 -84 V
80 -92 V
81 -102 V
81 -111 V
81 -121 V
81 -127 V
81 -131 V
80 -129 V
81 -117 V
81 -95 V
81 -68 V
81 -42 V
81 -22 V
81 -9 V
78 -4 V
stroke
5.000 UL
LT2
LTb
2352 4385 M
[ [(Helvetica) 160.0 0.0 true true 0 (Sersic fit)]
] -53.3 MRshow
LT2
2448 4385 M
478 0 V
720 4135 M
89 -1 V
213 -3 V
181 -4 V
145 -4 V
109 -3 V
82 -4 V
81 -5 V
72 -4 V
67 -5 V
74 -6 V
78 -8 V
80 -9 V
85 -12 V
78 -11 V
84 -13 V
70 -12 V
82 -15 V
76 -15 V
75 -16 V
78 -16 V
81 -18 V
79 -18 V
84 -21 V
83 -22 V
82 -25 V
79 -26 V
79 -27 V
77 -27 V
78 -29 V
78 -30 V
79 -30 V
79 -32 V
80 -33 V
80 -34 V
81 -35 V
80 -37 V
80 -38 V
79 -39 V
80 -40 V
81 -42 V
81 -43 V
80 -45 V
81 -46 V
81 -48 V
81 -49 V
80 -51 V
81 -53 V
81 -55 V
81 -56 V
81 -59 V
81 -61 V
80 -62 V
80 -64 V
80 -65 V
80 -68 V
80 -70 V
81 -72 V
80 -74 V
81 -76 V
81 -78 V
80 -81 V
81 -83 V
81 -85 V
81 -88 V
81 -90 V
80 -92 V
81 -94 V
81 -97 V
81 -98 V
81 -99 V
81 -100 V
81 -100 V
80 -99 V
48 -56 V
stroke
1.000 UL
LTb
720 4848 N
720 480 L
6208 0 V
0 4368 V
-6208 0 V
Z stroke
1.500 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
