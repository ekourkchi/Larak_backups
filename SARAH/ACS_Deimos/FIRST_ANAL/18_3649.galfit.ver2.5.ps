%!PS-Adobe-2.0
%%Title: 18_3649.galfit.ver2.5.ps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Thu Feb  4 13:44:00 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (18_3649.galfit.ver2.5.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (IR)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Feb  4 13:44:00 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
720 4848 M
63 0 V
6145 0 R
-63 0 V
stroke
624 4848 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 14)]
] -53.3 MRshow
1.000 UL
LTb
720 4686 M
31 0 V
6177 0 R
-31 0 V
720 4524 M
63 0 V
6145 0 R
-63 0 V
stroke
624 4524 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 15)]
] -53.3 MRshow
1.000 UL
LTb
720 4362 M
31 0 V
6177 0 R
-31 0 V
720 4201 M
63 0 V
6145 0 R
-63 0 V
stroke
624 4201 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 16)]
] -53.3 MRshow
1.000 UL
LTb
720 4039 M
31 0 V
6177 0 R
-31 0 V
720 3877 M
63 0 V
6145 0 R
-63 0 V
stroke
624 3877 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 17)]
] -53.3 MRshow
1.000 UL
LTb
720 3715 M
31 0 V
6177 0 R
-31 0 V
720 3553 M
63 0 V
6145 0 R
-63 0 V
stroke
624 3553 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 18)]
] -53.3 MRshow
1.000 UL
LTb
720 3391 M
31 0 V
6177 0 R
-31 0 V
720 3230 M
63 0 V
6145 0 R
-63 0 V
stroke
624 3230 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 19)]
] -53.3 MRshow
1.000 UL
LTb
720 3068 M
31 0 V
6177 0 R
-31 0 V
720 2906 M
63 0 V
6145 0 R
-63 0 V
stroke
624 2906 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 20)]
] -53.3 MRshow
1.000 UL
LTb
720 2744 M
31 0 V
6177 0 R
-31 0 V
720 2582 M
63 0 V
6145 0 R
-63 0 V
stroke
624 2582 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 21)]
] -53.3 MRshow
1.000 UL
LTb
720 2420 M
31 0 V
6177 0 R
-31 0 V
720 2258 M
63 0 V
6145 0 R
-63 0 V
stroke
624 2258 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 22)]
] -53.3 MRshow
1.000 UL
LTb
720 2097 M
31 0 V
6177 0 R
-31 0 V
720 1935 M
63 0 V
6145 0 R
-63 0 V
stroke
624 1935 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 23)]
] -53.3 MRshow
1.000 UL
LTb
720 1773 M
31 0 V
6177 0 R
-31 0 V
720 1611 M
63 0 V
6145 0 R
-63 0 V
stroke
624 1611 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 24)]
] -53.3 MRshow
1.000 UL
LTb
720 1449 M
31 0 V
6177 0 R
-31 0 V
720 1287 M
63 0 V
6145 0 R
-63 0 V
stroke
624 1287 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 25)]
] -53.3 MRshow
1.000 UL
LTb
720 1126 M
31 0 V
6177 0 R
-31 0 V
720 964 M
63 0 V
6145 0 R
-63 0 V
stroke
624 964 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 26)]
] -53.3 MRshow
1.000 UL
LTb
720 802 M
31 0 V
6177 0 R
-31 0 V
720 640 M
63 0 V
6145 0 R
-63 0 V
stroke
624 640 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 27)]
] -53.3 MRshow
1.000 UL
LTb
720 640 M
0 63 V
0 4145 R
0 -63 V
stroke
720 480 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.2)]
] -53.3 MCshow
1.000 UL
LTb
1065 640 M
0 31 V
0 4177 R
0 -31 V
1410 640 M
0 63 V
0 4145 R
0 -63 V
stroke
1410 480 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.4)]
] -53.3 MCshow
1.000 UL
LTb
1755 640 M
0 31 V
0 4177 R
0 -31 V
2100 640 M
0 63 V
0 4145 R
0 -63 V
stroke
2100 480 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.6)]
] -53.3 MCshow
1.000 UL
LTb
2444 640 M
0 31 V
0 4177 R
0 -31 V
2789 640 M
0 63 V
0 4145 R
0 -63 V
stroke
2789 480 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.8)]
] -53.3 MCshow
1.000 UL
LTb
3134 640 M
0 31 V
0 4177 R
0 -31 V
3479 640 M
0 63 V
0 4145 R
0 -63 V
stroke
3479 480 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1)]
] -53.3 MCshow
1.000 UL
LTb
3824 640 M
0 31 V
0 4177 R
0 -31 V
4169 640 M
0 63 V
0 4145 R
0 -63 V
stroke
4169 480 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1.2)]
] -53.3 MCshow
1.000 UL
LTb
4514 640 M
0 31 V
0 4177 R
0 -31 V
4859 640 M
0 63 V
0 4145 R
0 -63 V
stroke
4859 480 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1.4)]
] -53.3 MCshow
1.000 UL
LTb
5204 640 M
0 31 V
0 4177 R
0 -31 V
5548 640 M
0 63 V
0 4145 R
0 -63 V
stroke
5548 480 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1.6)]
] -53.3 MCshow
1.000 UL
LTb
5893 640 M
0 31 V
0 4177 R
0 -31 V
6238 640 M
0 63 V
0 4145 R
0 -63 V
stroke
6238 480 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1.8)]
] -53.3 MCshow
1.000 UL
LTb
6583 640 M
0 31 V
0 4177 R
0 -31 V
6928 640 M
0 63 V
0 4145 R
0 -63 V
stroke
6928 480 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 2)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
720 4848 N
720 640 L
6208 0 V
0 4208 V
-6208 0 V
Z stroke
LCb setrgbcolor
160 2744 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Symbol) 160.0 0.0 true true 0 (m)]
[(Helvetica) 160.0 0.0 true true 0 ( [F814W mag )]
[(Helvetica) 160.0 0.0 true true 0 (arcsec)]
[(Helvetica) 128.0 80.0 true true 0 (-2)]
[(Helvetica) 160.0 0.0 true true 0 (])]
] -69.3 MCshow
grestore
LTb
LCb setrgbcolor
3824 240 M
[ [(Helvetica) 160.0 0.0 true true 0 (r)]
[(Helvetica) 128.0 80.0 true true 0 (0.25)]
[(Helvetica) 160.0 0.0 true true 0 ( [arcsec)]
[(Helvetica) 128.0 80.0 true true 0 (1/4)]
[(Helvetica) 160.0 0.0 true true 0 (])]
] -69.3 MCshow
LTb
1.000 UP
2815 1417 M
[ [(Helvetica) 160.0 0.0 true true 0 (mag= 17.3)]
] -53.3 MLshow
2815 1190 M
[ [(Helvetica) 160.0 0.0 true true 0 (Re= 2.50 [arcsec])]
] -53.3 MLshow
2815 964 M
[ [(Helvetica) 160.0 0.0 true true 0 (n= 1.1)]
] -53.3 MLshow
3.000 UL
LT6
4367 4848 M
0 -4208 V
stroke
1.000 UL
LTb
1.000 UP
2.000 UL
LT7
LTb
6193 4705 M
[ [(Helvetica) 160.0 0.0 true true 0 (Galaxy profile)]
] -53.3 MRshow
LT7
1401 3155 TriU
1434 3151 TriU
1468 3147 TriU
1502 3143 TriU
1537 3138 TriU
1576 3132 TriU
1613 3126 TriU
1650 3119 TriU
1689 3112 TriU
1726 3105 TriU
1768 3095 TriU
1812 3085 TriU
1859 3074 TriU
1905 3064 TriU
1955 3052 TriU
2001 3041 TriU
2052 3028 TriU
2110 3015 TriU
2153 3004 TriU
2202 2992 TriU
2265 2978 TriU
2311 2968 TriU
2358 2957 TriU
2409 2944 TriU
2469 2932 TriU
2521 2921 TriU
2583 2908 TriU
2650 2896 TriU
2717 2879 TriU
2779 2865 TriU
2838 2848 TriU
2896 2826 TriU
2963 2805 TriU
3012 2793 TriU
3081 2772 TriU
3160 2748 TriU
3226 2725 TriU
3309 2698 TriU
3398 2661 TriU
3481 2631 TriU
3567 2594 TriU
3652 2560 TriU
3732 2528 TriU
3801 2501 TriU
3921 2454 TriU
4010 2413 TriU
4107 2371 TriU
4185 2335 TriU
4317 2279 TriU
4448 2222 TriU
4521 2176 TriU
4629 2116 TriU
4705 2084 TriU
4818 2010 TriU
4934 1939 TriU
5052 1850 TriU
5173 1737 TriU
5324 1617 TriU
5420 1541 TriU
5550 1386 TriU
5688 1195 TriU
5907 663 TriU
6512 4705 TriU
5.000 UL
LT2
LTb
6193 4545 M
[ [(Helvetica) 160.0 0.0 true true 0 (Sersic fit)]
] -53.3 MRshow
LT2
6289 4545 M
447 0 V
1048 2904 M
117 0 V
141 0 V
125 0 V
83 -1 V
33 0 V
37 -1 V
41 0 V
37 -1 V
38 0 V
40 -1 V
45 -1 V
44 -1 V
44 -1 V
43 -2 V
42 -1 V
44 -2 V
45 -2 V
50 -2 V
50 -3 V
50 -3 V
51 -4 V
53 -4 V
55 -5 V
55 -5 V
58 -6 V
59 -6 V
59 -8 V
62 -8 V
62 -9 V
64 -10 V
66 -11 V
67 -12 V
69 -14 V
71 -15 V
72 -16 V
75 -18 V
76 -20 V
78 -22 V
79 -23 V
82 -26 V
84 -29 V
86 -31 V
88 -34 V
90 -37 V
92 -41 V
94 -44 V
97 -49 V
99 -53 V
101 -58 V
104 -63 V
107 -70 V
108 -76 V
112 -84 V
114 -91 V
117 -101 V
120 -111 V
122 -122 V
126 -135 V
128 -152 V
131 -173 V
5765 880 L
5889 640 L
179 0 R
121 2450 V
148 0 V
152 0 V
156 0 V
159 0 V
124 0 V
stroke
1.000 UL
LTb
720 4848 N
720 640 L
6208 0 V
0 4208 V
-6208 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
%%Pages: 1
